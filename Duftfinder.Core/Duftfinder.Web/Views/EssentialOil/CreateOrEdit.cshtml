@using Duftfinder.Domain.Enums
@using Duftfinder.Resources
@using Duftfinder.Web.Controllers
@model Duftfinder.Web.Models.EssentialOilViewModel

@{
    ViewBag.Title = nameof(EssentialOilController.CreateOrEdit);
}

@section Scripts
{
    <script src="/js/EssentialOil.js"></script>
}

@{
    // Disable Subnavigation, if Create.
    var id = string.IsNullOrEmpty(Model.Id) ? "" : Model.Id;
    @Html.Partial("_Subnavigation", id)
}

<div class="duftfinder-content">
    <h2>@Resources.EssentialOil_EssentialOil</h2>

    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

    @using (Html.BeginForm("CreateOrEdit", "EssentialOil", FormMethod.Post, new {enctype = "multipart/form-data", id = "essential-oil-form"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PictureFileName, new {id = "picture-file-name"})
        @Html.HiddenFor(model => model.PictureDataAsString, new {id = "picture-data-as-string"})

        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2">@Resources.EssentialOil_Name</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">@Resources.EssentialOil_NameLatin</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.NameLatin, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.NameLatin, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">@Resources.EssentialOil_Description</label>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, 11, 0, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">@Resources.EssentialOil_Type</label>
                <div class="col-md-10">
                    <div>
                        @Html.RadioButtonFor(m => m.Type, EssentialOilType.Oil.ToString(), new {id = "rb-essential-oil-type-oil"})
                        <label for="rb-essential-oil-type-oil" class="control-label">@Resources.EssentialOilType_Oil</label>
                    </div>
                    <div>
                        @Html.RadioButtonFor(m => m.Type, EssentialOilType.Hydrolat.ToString(), new {id = "rb-essential-oil-type-hydrolat"})
                        <label for="rb-essential-oil-type-hydrolat" class="control-label">@Resources.EssentialOilType_Hydrolat</label>
                    </div>
                    <div>
                        @Html.RadioButtonFor(m => m.Type, EssentialOilType.FatOil.ToString(), new {id = "rb-essential-oil-type-fat-oil"})
                        <label for="rb-essential-oil-type-fat-oil" class="control-label">@Resources.EssentialOilType_FatOil</label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">@Resources.EssentialOil_PictureSource</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PictureSource, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.PictureSource, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2" for="upload-file-input">@Resources.EssentialOil_Picture</label>
                <div class="col-md-10">
                    @* The fake-file div is used to customize the upload-file-input. The upload-file-input is set in background,
                        as the "Choose file" text cannot be customized. The fake-file is an overlay for the upload-file-input. *@
                    <div class="file-inputs">
                        @* Important: name uploadFile must be same as parameter in EssentialOilController. *@
                        <input id="upload-file-input" name="uploadFile" type="file" data-val="true" class="file"/>
                        <div class="fake-file">
                            <input id="fake-file-input" type="text" readonly="readonly" class="form-control"/>
                            <input type="button" value="@Resources.Action_Browse" class="btn btn-primary"/>
                        </div>
                        <div id="loader-container" class="display-none">
                            <div class="loader"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @* Container in order to display uploaded picture. *@
                    <img id="picture-container" src="@Model.PictureDataAsStringDisplay"/>
                </div>
            </div>
            @{
                // Hide "Bild entfernen" button, if no picture is in preview.
                var displayNone = string.IsNullOrEmpty(Model.PictureDataAsStringDisplay) ? "display-none" : "";
            }
            <div id="remove-picture-container" class="form-group @displayNone">
                <div class="col-md-10">
                    <input id="remove-picture" type="button" value="@Resources.EssentialOil_RemovePicture" class="btn btn-primary"/>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a href="@Url.Action(nameof(EssentialOilController.Index), new {lastEditedEssentialOilId = Model.Id})" class="btn btn-secondary">@Resources.Action_Cancel</a>
                    <input type="submit" value="@Resources.Action_Save" class="btn btn-primary"/>
                </div>
            </div>
        </div>
    }
</div>