@using Duftfinder.Resources
@using Duftfinder.Web.Controllers

@model Duftfinder.Web.Models.AssignMoleculeViewModel

@{
    ViewBag.Title = nameof(EssentialOilController.AssignMolecule);
}

@section Scripts
{
    @Scripts.Render("~/bundles/sliders")
    @Scripts.Render("~/bundles/effect")
}

@{
    // Disable Subnavigation, if Create.
    string id = string.IsNullOrEmpty(Model.EffectId) ? "" : Model.EffectId;
    @Html.Partial("_Subnavigation", id)
} 
<div class="duftfinder-content">
    <h2>@Resources.Effect_AssignMolecule</h2>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "assign-molecule-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.EffectId)
        @Html.HiddenFor(model => model.EffectName)

        <div class="form-horizontal">
            <div id="essential-oil" class="form-group">
                <label class="control-label col-md-2 bold">@Resources.Effect_AssignMolecule_Effect</label>
                <label class="control-label col-md-10">@Html.DisplayFor(m => m.EffectName)</label>
            </div>

            <table class="table">
                <tr>
                    <th>
                        <label>@Resources.Molecule_Molecules</label>
                    </th>
                    <th>
                        <label>@Resources.Effect_EffectDegree</label>
                    </th>
                </tr>

                @foreach (KeyValuePair<string, string> substance in Model.SubstanceDisplayItems)
                {
                    @* List all substances. *@
                    <tr>
                        <td class="italic">
                            <label>@substance.Value</label>
                        </td>
                        <td></td>
                    </tr>
                
                    @* List all molecules for the appropriate substance. *@
                    for (int i = 0; i < Model.AssignMolecules.Count; i++)
                    {
                        if (Model.AssignMolecules[i].SubstanceIdString == substance.Key)
                        {
                            @Html.Hidden("[" + i + "].AssignedValueId", Model.AssignMolecules[i].AssignedValueId)
                            @Html.Hidden("[" + i + "].AssignedValueName", Model.AssignMolecules[i].AssignedValueName)
                            @Html.Hidden("[" + i + "].SubstanceIdString", Model.AssignMolecules[i].SubstanceIdString)
                            <tr>
                                <td class="row-indention">
                                    <div>@Html.DisplayFor(model => Model.AssignMolecules[i].AssignedValueName)</div>
                                </td>
                                @* Workaround to get items of model list in HttpPost of Controller *@
                                <td>
                                    <div>
                                        @* The slider *@
                                        @Html.TextBox("[" + i + "].EffectDegree", Model.AssignMolecules[i].EffectDegree, new {id = "slider-" + Model.AssignMolecules[i].AssignedValueId, @class = "slider", data_slider_min = "0", data_slider_max = "4", data_slider_step = "1", data_slider_value = Model.AssignMolecules[i].EffectDegree})
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                }
            </table>
        
            @{
                // Disable "Save" button if no molecules exist is list.
                string disabled = Model.AssignMolecules.Count == 0 ? "disabled" : "";
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a href="@Url.Action(nameof(EffectController.Index), new { lastEditedEffectId = Model.EffectId })" class="btn btn-secondary">@Resources.Action_Cancel</a>
                    <input type="submit" value="@Resources.Action_Save" class="btn btn-primary @disabled" />
                </div>
            </div>
        </div>
    }
</div>
