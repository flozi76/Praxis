@using Duftfinder.Resources
@model Duftfinder.Web.Models.SearchResultViewModel

<div id="effects-search-results-header" class="margin-bottom">
    <span>@Resources.SearchEffects_SearchResultFilterText</span>
    @* The filter amount buttons above the result list. *@
    <div id="search-result-filter" class="btn-group margin-left" role="group">
        @* Button is triggered in SearchEffect.js *@
        <a href="#" class="btn btn-secondary filter-list-amount-button active" data-item-filter-list-amount="">@Resources.SearchEffects_SearchResultFilter_All</a>
        <a href="#" class="btn btn-secondary filter-list-amount-button" data-item-filter-list-amount="5">@Resources.SearchEffects_SearchResultFilter_5</a>
        <a href="#" class="btn btn-secondary filter-list-amount-button" data-item-filter-list-amount="10">@Resources.SearchEffects_SearchResultFilter_10</a>
    </div>
    <span class="margin-left">@Resources.SearchEffects_SearchResultAmountText @Model.SearchEssentialOilResultsAmount</span>
</div>

<table class="table">

    @if (Model.SearchEssentialOilResults.ToList().Any())
    {
        // Only show table entries, if essential oils found.
        <tr>
            <th>
                <label>@Resources.EssentialOil_Name</label>
            </th>
            @* Column is hidden on sm and xs devices.*@
            <th class="d-none d-md-block">
                <label>@Resources.EssentialOil_NameLatin</label>
            </th>
            <th>
                @* "Anz. Übereinstimmungen" text is hidden on sm and xs devices.*@
                <label class="d-none d-md-block">@Resources.SearchEffects_MatchAmount</label>
            </th>
            <th>
                <label id="weighted-match-value-label">@Resources.SearchEffects_WeightedMatchValue</label>
            </th>
            <th></th>
        </tr>

        foreach (var item in Model.SearchEssentialOilResults)
        {
            <tr data-item-value-id="@item.Id">
                <td>
                    @* Important: hidden field must be in <td>. Otherwise hideChildrenValue in SearchEffects.js is wrong. *@
                    @* Hidden field that contains all the effects, that an essential oil is effective for as one string separated with ;@ *@
                    @Html.HiddenFor(modelItem => item.SearchEffectTextsInEssentialOil, new {id = "search-effect-text-" + item.Id})
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @* Column is hidden on sm and xs devices.*@
                <td class="d-none d-md-block">
                    @Html.DisplayFor(modelItem => item.NameLatin)
                </td>
                <td id="match-amount">
                    @Html.DisplayFor(modelItem => item.MatchAmount)
                </td>
                <td>
                    <div class="progress match-independent-progress-bar-container">
                        <div class="progress-bar match-independent-progress-bar" role="progressbar" style="width: @item.WeightedMatchValue%" aria-valuenow="@item.WeightedMatchValue" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </td>
                <td>
                    @* Button is triggered in SearchEffects.js *@
                    <a href="#" id="@item.Id" class="details-buttons">@Resources.Action_Details</a>
                </td>
            </tr>
        }
    }
    else
    {
        // Show text, if no essential oils found.
        <tr>
            <td>
                <label>@Resources.SearchEffects_NoEssentialOilsFound</label>
            </td>
            <td></td>
            <td></td>
        </tr>
    }


</table>