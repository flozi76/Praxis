@using Duftfinder.Domain.Helpers
@using Duftfinder.Resources
@model Duftfinder.Web.Models.EssentialOilViewModel

<div id="essential-oil-details">
    <h2>@Model.Name</h2>

    @* The right column with the picture and stuff. Is hidden on sm and xs devices.
        Because of d-none d-md-block. See: https://getbootstrap.com/docs/4.0/utilities/display/*@
    <div id="col-right" class="col-md-6 d-none d-md-block">
        <div class="row">
            <div class="col-md-12">
                @* Container in order to display uploaded picture. *@
                <img id="picture-container" src="@Model.PictureDataAsStringDisplay"/>
            </div>
        </div>
        @if (Model.PictureSource != null)
        {
            // Don't show label "Quelle", if no picture source.
            <div class="row">
                <div id="picture-source" class="col-md-12">
                    <label>@Html.DisplayFor(model => model.PictureSource)</label>
                    <label class="margin-right-small">@Resources.SearchEssentialOil_PictureSource</label>
                </div>
            </div>
        }
    </div>

    @* The left column with all the stuff. *@
    <div id="col-left" class="col-md-6 col-sm-12 col-12">
        <div class="row">
            <div class="col-md-5 col-sm-5 col-5">
                <label class="title">@Resources.SearchEssentialOil_NameLatin</label>
            </div>
            <div class="col-md-7 col-sm-7 col-7">
                <label>@Html.DisplayFor(model => model.NameLatin)</label>
            </div>

        </div>
        <div class="row margin-top-small">
            <div class="col-md-5 col-sm-5 col-5">
                <label class="title">@Resources.SearchEssentialOil_Type</label>
            </div>
            <div class="col-md-7 col-sm-7 col-7">
                <label>@Html.DisplayFor(model => model.EssentialOilTypeDisplayName)</label>
            </div>
        </div>
        <div class="row margin-top-small">
            <div class="col-md-5 col-sm-5 col-5">
                <label class="title">@Resources.SearchEssentialOil_Description</label>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-12">
                <label>@Html.DisplayFor(model => model.Description)</label>
            </div>
        </div>

        @* Only show effects for Admin & Friend. *@
        @if (User.Identity.IsAuthenticated && User.IsInRole(Constants.Admin) || User.IsInRole(Constants.Friend))
        {
            // Effects 
            if (Model.Effects.Any())
            {
                // Don't show effects, if no effect is assigned.
                <div class="row margin-top-small">
                    <div class="col-md-8 col-sm-7 col-7">
                        <label class="title">@Resources.SearchEssentialOil_AssignedEffects</label>
                    </div>
                    <div class="col-md-4 col-sm-5 col-5 effect-degree">
                        <label class="title">@Resources.SearchEssentialOil_EffectDegree</label>
                    </div>
                </div>
            }

            foreach (var effect in Model.Effects)
            {
                <div class="row">
                    <div class="col-md-8 col-sm-7 col-7">
                        <label>@effect.Name</label>
                    </div>
                    <div class="col-md-4 col-sm-5 col-5">
                        @* The slider. Class col-md-12 is set in Slider.js *@
                        <input class="slider" type="text" data-slider-enabled="false" data-slider-min="0" data-slider-max="4" data-slider-step="1" data-slider-value="@effect.EffectDegree"/>
                    </div>
                </div>
            }
        }

        @* Molecules *@
        @if (Model.Molecules.Any())
        {
            // Don't show molecules, if no molecule is assigned.
            <div class="row margin-top-small">
                <div class="col-md-8 col-sm-7 col-7">
                    <label class="title">@Resources.SearchEssentialOil_AssignedMolecules</label>
                </div>
                <div class="col-md-4 col-sm-5 col-5 molecule-percentage">
                    <label class="title">@Resources.SearchEssentialOil_MoleculePercentage</label>
                </div>
            </div>
        }

        @foreach (var molecule in Model.Molecules)
        {
            // Show e.g. "Aromatische Aldehyde allgemein" if is general molecule..
            var isGeneralText = molecule.IsGeneral ? $"{Resources.Molecule_General} " : "";

            <div class="row">
                <div class="col-md-8 col-sm-7 col-7">
                    <label>@molecule.Name @isGeneralText</label>
                </div>
                <div class="col-md-4 col-sm-5 col-5 molecule-percentage">
                    <label>@molecule.MoleculePercentage</label>
                </div>
            </div>
        }


        @* Contains the picture and stuff for small devices. Is placed below all other stuff. Is hidden on md and upwards devices.
            Because of d-block d-sm-block d-md-none. See: https://getbootstrap.com/docs/4.0/utilities/display/*@
        <div id="small-device-container" class="d-block d-sm-block d-md-none">
            <div class="row">
                <div class="col-sm-12 col-12">
                    @* Container in order to display uploaded picture. *@
                    <img id="picture-container-small-device" src="@Model.PictureDataAsStringDisplay"/>
                </div>
            </div>
            @if (Model.PictureSource != null)
            {
                // Don't show label "Quelle", if no picture source.
                <div class="row">
                    <div id="picture-source-small-device" class="col-md-12 d-block">
                        <label class="margin-right-small">@Resources.SearchEssentialOil_PictureSource</label>
                        <label>@Html.DisplayFor(model => model.PictureSource)</label>
                    </div>
                </div>
            }
        </div>

        <div class="row">
            <div class="col-md-12 margin-top">
                @* Navigate back to appropirate view, according to whether came from effect search or essential oil search. *@
                @if (Model.SearchEffects != null)
                {
                    @* Hidden form in order to keep the SearchEffects in order to restore the search conditions, if "Zurück" is clicked. *@
                    using (Html.BeginForm(null, null, FormMethod.Post, new {id = "search-effects-hidden-form"}))
                    {
                        for (var i = 0; i < Model.SearchEffects.Count; i++)
                        {
                            @Html.Hidden("[" + i + "].SearchEffectText", Model.SearchEffects[i].SearchEffectText)
                            @Html.Hidden("[" + i + "].DiscomfortValue", Model.SearchEffects[i].DiscomfortValue)
                        }
                    }

                    @* Button is triggered in SearchEffects.js *@
                    <a href="#" id="search-effects-back-button" class="btn btn-secondary">@Resources.Action_Back</a>
                }
                else if (Model.SearchEssentialOilText != null)
                {
                    @* Hidden form in order to keep the SearchEssentialOilText in order to restore the search conditions, if "Zurück" is clicked. *@
                    using (Html.BeginForm(null, null, FormMethod.Post, new {id = "search-essential-oil-hidden-form"}))
                    {
                        @Html.HiddenFor(model => model.SearchEssentialOilText)
                    }

                    @* Button is triggered in SearchEssentialOil.js *@
                    <a href="#" id="search-essential-oil-back-button" class="btn btn-secondary">@Resources.Action_Back</a>
                }
            </div>
        </div>
    </div>
</div>